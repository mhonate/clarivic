var mymap = null;
document.addEventListener("turbolinks:load", function() {
  before_cache = document.getElementById("hostel-map");
  if(document.getElementById("hostel-map")) {
    let map = document.getElementById("hostel-map")
    let latitude = map.dataset.lat;
    let longitude = map.dataset.long;


    mymap = L.map('hostel-map')
             .setView([latitude, longitude], (map.dataset.zoom || 13));

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
      maxZoom: 18,
      id: 'mapbox.streets',
      accessToken: 'pk.eyJ1IjoicGF0cmljaW9wZW5hbXVub3oiLCJhIjoiY2pxenc5ajFsMGlvejRhcGJrazA5aDgxZiJ9.--sCYLDz82WTD-pvaYMXww'
    }).addTo(mymap);
    L.marker([latitude, longitude]).addTo(mymap);
  }
  if(document.getElementById("all-hostels-map")) {
    let map = document.getElementById("all-hostels-map");
    let latitude = map.dataset.lat;
    let longitude = map.dataset.long;

    mymap = L.map('all-hostels-map')
             .setView([latitude, longitude], (map.dataset.zoom || 13));

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
      maxZoom: 18,
      id: 'mapbox.streets',
      accessToken: 'pk.eyJ1IjoicGF0cmljaW9wZW5hbXVub3oiLCJhIjoiY2pxenc5ajFsMGlvejRhcGJrazA5aDgxZiJ9.--sCYLDz82WTD-pvaYMXww'
    }).addTo(mymap);

    $.getJSON('/hostels', function(hostels, textStatus) {
      hostels.forEach((hostel) => {
        let marker = L.marker([hostel.latitude, hostel.longitude]).addTo(mymap);
        marker.hostel_id = hostel.id;
      });
    });
  }
  $('.hostel-filter-search.by-map').css('display','none');
});

document.addEventListener("turbolinks:before-cache", function() {
  $('#all-hostels-map, #hostel-map').html('');
  $('.hostel-filter-search.by-form').css('display','flex');
});

function changeCommunes(regions_select, communes_select) {
  let communes_fist_value = $('option', communes_select)[0];
  $('option', communes_select).remove();
  $(communes_select).append(communes_fist_value);
  $.get({
    url: '/api/region/'+regions_select.value,
    dataType: 'json'
  })
  .done(function(json) {
    json.communes.forEach((e) => {
      $(communes_select).append(new Option(e.short_name, e.id));
    });
  })
  .fail(function(error) { console.log(error) });
}

function fadeFormMap() {
  $('.hostel-filter-search').fadeToggle();
}

function getMarkers(map) {
  let layers = [];
  map.eachLayer((layer) => {
    if(layer.options && layer.options.pane === "markerPane") {
      layers.push(layer);
    }
  });
  return layers;
}

function getMarkersInsideBounds(map) {
  let layers = [];
  getMarkers(map).forEach((layer) => {
    if (map.getBounds().contains(layer.getLatLng())) {
      layers.push(layer);
    }
  });
  return layers;
}
